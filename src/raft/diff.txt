diff --git a/src/raft/raft.go b/src/raft/raft.go
index 6303c1e..7c429fe 100644
--- a/src/raft/raft.go
+++ b/src/raft/raft.go
@@ -251,7 +251,7 @@ func (rf *Raft)RequestAppendEntry(args AppendEntryArgs, reply *AppendEntryReply)
     }
 
     if rf.state != Follower {
-        //rf.debug("getting AppendEntry RPC... %v's term is %v ...I'm Follower now\n", args.LeaderId, args.Term)
+        rf.debug("getting AppendEntry RPC... %v's term is %v ...I'm Follower now\n", args.LeaderId, args.Term)
     }
     rf.currentTerm = args.Term
     rf.state = Follower
@@ -271,7 +271,7 @@ func (rf *Raft)RequestAppendEntry(args AppendEntryArgs, reply *AppendEntryReply)
         for i := 0; i < len(rf.logs); i++ {
             if rf.logs[i].Term == rf.logs[args.PrevLogIndex].Term {
                 reply.ReplyIndex = rf.logs[i].Index
-                //rf.debug("reply Index is %v\n", reply.ReplyIndex)
+                rf.debug("reply Index is %v, len logs is %v\n", reply.ReplyIndex, len(rf.logs))
                 break
             }
         }
@@ -369,11 +369,14 @@ func (rf *Raft) elect() {
     
     rf.lastTime = time.Now()
     
+    if len(rf.logs) < 1 {
+        rf.debug("wtf\n")
+    }
     request := RequestVoteArgs{
         Term            : rf.currentTerm,
         CandidateId     : rf.me,
-        LastLogIndex    : len(rf.logs) - 1,
-        LastLogTerm     : rf.logs[len(rf.logs)-1].Term,
+        LastLogIndex    : rf.logs[len(rf.logs) - 1].Index,
+        LastLogTerm     : rf.logs[len(rf.logs) - 1].Term,
     }
     
     rf.persist()
@@ -445,7 +448,7 @@ func (rf *Raft) elect() {
     if voteCount > (len(rf.peers) / 2 ) && rf.state == Candidate && rf.currentTerm == request.Term {
         rf.mu.Lock()
         rf.state = Leader
-        //rf.debug("I got majority votes!\n")
+        rf.debug("I got majority votes!, my last index is %v\n", rf.logs[len(rf.logs) - 1].Index)
         for i := 0; i < len(rf.peers); i++ {
             rf.nextIndex[i] = rf.logs[len(rf.logs) - 1].Index + 1
             rf.matchIndex[i] = 0
@@ -562,7 +565,7 @@ func (rf *Raft) sendHeartBeat(leaderTerm int) {
 
         // Unlock
         rf.mu.Unlock()
-        time.Sleep(time.Duration(100 * time.Millisecond))
+        time.Sleep(time.Duration(50 * time.Millisecond))
     }
 }
 
